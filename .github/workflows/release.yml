name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger only on version tags like v1.0.0

jobs:
  build:
    name: Build and Package Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os:
          - windows
          - linux
          - mac-intel
          - mac-m1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build Repack tool
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: amd64
          EXT: ""
        run: |
          cd repack

          if [ "${GOOS}" = "mac-intel" ]; then
            GOOS="darwin"
          elif [ "${GOOS}" = "mac-m1" ]; then
            GOOS="darwin"
            GOARCH="arm64"
          elif [ "${GOOS}" = "windows" ]; then
            EXT=".exe"
          fi

          go build -o repack${EXT} ./main.go
          cd ..

      - name: Build Recolor tool
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: amd64
          EXT: ""
        run: |
          cd recolor

          if [ "${GOOS}" = "mac-intel" ]; then
            GOOS="darwin"
          elif [ "${GOOS}" = "mac-m1" ]; then
            GOOS="darwin"
            GOARCH="arm64"
          elif [ "${GOOS}" = "windows" ]; then
            EXT=".exe"
          fi

          go build -o recolor${EXT} ./main.go
          cd ..

      - name: Package pixel tools
        env:
          OS: ${{ matrix.os }}
          EXT: ""
        run: |
          OUTPUT_NAME="pixel-tools-${OS}"
          if [ "${OS}" = "windows" ]; then
            EXT=".exe"
          fi

          mkdir -p dist/${OUTPUT_NAME}

          cp -v repack/repack${EXT} dist/${OUTPUT_NAME}/
          cp -v recolor/recolor${EXT} dist/${OUTPUT_NAME}/
          cp -v recolor/recolor-config.yaml dist/${OUTPUT_NAME}/
          cp -v recolor/tf_to_e.lut dist/${OUTPUT_NAME}/
          if [ "${OS}" = "mac-intel" ] || [ "${OS}" = "mac-m1" ]; then
            cp -v recolor/recolor.command dist/${OUTPUT_NAME}/
          fi

          cd dist
          find .
          zip -r ${OUTPUT_NAME}.zip ${OUTPUT_NAME}/
          cd ..

      - name: Release to Github
        uses: softprops/action-gh-release@v1
        with:
          files: dist/pixel-tools-${{ matrix.os }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Release to itch.io
#        uses: yeslayla/butler-publish-itchio-action@v1.0.3
#        env:
#          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_API_KEY }}
#          CHANNEL: ${{ matrix.os }}
#          ITCH_GAME: pixel-tools
#          ITCH_USER: skhoroshavin
#          PACKAGE: dist/pixel-tools-${{ matrix.os }}.zip
#          VERSION: ${{ github.ref_name }}
